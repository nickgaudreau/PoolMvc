@using System.Linq
@using PoolHockeyBLL.BizEntities
@model IEnumerable<PoolLastYearEntity>

@{
    ViewBag.Title = "Pool 2015-16";
    Layout = "~/Views/Shared/_ThemeLayout.cshtml";
}

<div class="banner-stats">
    <div class="container-fluid">
        <h1>Tout-en-un 2015/16</h1>
        <em></em>
        <h2><a href="#">Home</a><label>/</label>@ViewBag.Title</h2>
    </div>
</div>
<div class="container">
    <div class="row text-left">
        <div class="col-md-12">
            @if (ViewBag.OrderedUsers != null)
            {
                var counter = 1;
                foreach (var user in ViewBag.OrderedUsers)
                {

                    var name = user.Key.ToString();
                    name = name.Remove(name.IndexOf('@'));

                    <h3>@counter - @name</h3>
                    <div class="table-responsive">
                        <table class="table table-condensed">
                            <thead>
                                <tr>
                                    <th>
                                        @PoolHockeyMVC.Resources.Global.Round
                                    </th>
                                    <th>
                                        @PoolHockeyMVC.Resources.Global.Name
                                    </th>
                                    <th>
                                        @PoolHockeyMVC.Resources.Global.Team
                                    </th>
                                    <th>
                                        @PoolHockeyMVC.Resources.Global.Game
                                    </th>
                                    <th>
                                        @PoolHockeyMVC.Resources.Global.Goal
                                    </th>
                                    <th>
                                        @PoolHockeyMVC.Resources.Global.Assist
                                    </th>
                                    <th>
                                        @PoolHockeyMVC.Resources.Global.Points
                                    </th>
                                    <th>
                                        @PoolHockeyMVC.Resources.Global.Avg
                                    </th>
                                    <th>
                                        @PoolHockeyMVC.Resources.Global.Yesterday
                                    </th>
                                    <th>
                                        @PoolHockeyMVC.Resources.Global.Week
                                    </th>
                                    <th>
                                        @PoolHockeyMVC.Resources.Global.Month
                                    </th>
                                    <th>
                                        <span class="fa fa-male"></span>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var item in Model)
                                {
                                    if (item.C_UserEmail == user.Key)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.I_Round)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.C_Name)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.C_Team)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.I_Game)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.I_Goal)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.I_Assist)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.I_Point)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.F_Avg)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.I_PtLastD)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.I_PtLastW)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.I_PtLastM)
                                            </td>
                                            <td>
                                                @if (item.I_Status == 3)
                                                {
                                                    <span class="fa fa-times text-danger cursor-pointer" data-toggle="tooltip" data-placement="top" title="Pire choix."></span>
                                                }
                                                else if (item.I_Status == 2)
                                                {
                                                    <span class="fa fa-thumbs-o-down text-info cursor-pointer" data-toggle="tooltip" data-placement="top" title="Pire de ronde."></span>
                                                }
                                                else if (item.I_Status == 1)
                                                {
                                                    <span class="fa fa-trophy text-warning cursor-pointer" data-toggle="tooltip" data-placement="top" title="Meilleur de ronde."></span>
                                                }
                                            </td>

                                        </tr>
                                    }
                                }

                                <!-- Row total -->
                                @{
                                    var currUserPicks = @Model.Where(player => player.C_UserEmail == user.Key && player.I_Status != (int)Statuses.Out).ToList();
                                    //var games = currUserPicks.Sum(p => p.I_Game);
                                    //var points = (double)currUserPicks.Sum(p => p.I_Point);
                                    //var avg = points / games;
                                    //avg = Math.Round(avg, 2);
                                    var avg = GetCurrentUserAvg(user.Key);
                                }
                                <tr class="text-bold">
                                    <td></td>
                                    <td>Total: </td>
                                    <td></td>
                                    <td>
                                        @currUserPicks.Sum(p => p.I_Game)
                                    </td>
                                    <td>
                                        @currUserPicks.Sum(p => p.I_Goal)
                                    </td>
                                    <td>
                                        @currUserPicks.Sum(p => p.I_Assist)
                                    </td>
                                    <td>
                                        @currUserPicks.Sum(p => p.I_Point)
                                    </td>
                                    <td>@avg</td>
                                    <td>@currUserPicks.Sum(p => p.I_PtLastD)</td>
                                    <td>@currUserPicks.Sum(p => p.I_PtLastW)</td>
                                    <td>@currUserPicks.Sum(p => p.I_PtLastM)</td>
                                    <td></td>
                                </tr>

                            </tbody>

                        </table>
                    </div>
                    counter++;
                }
            }

        </div>
    </div>
</div>
@functions
{
    // Return dynamic and cannot be use .Sum
    public List<PoolLastYearEntity> GetCurrentUserPicks(string userEmail)
    {
        if (Model == null) return new List<PoolLastYearEntity>();
        return Model.Where(player => player.C_UserEmail == userEmail && player.I_Status != (int)Statuses.Out).ToList();
    }

    public double GetCurrentUserAvg(string userEmail)
    {
        if (Model == null) return 0.0;

        var list = Model.Where(player => player.C_UserEmail == userEmail && player.I_Status != (int)Statuses.Out).ToList();

        var games = list.Sum(p => p.I_Game);
        var points = (double)list.Sum(p => p.I_Point);
        var avg = points / games;
        return Math.Round(avg, 2);

    }


}

@section scripts{
    <script>
        $(function() {
            $('[data-toggle="tooltip"]').tooltip();
        })();
    </script>
}